:root{
    --blanco: #ffff;
    --oscuro: #212121;
    --primario: #ffc107;
    --secundario: #26939f;
    --gris: #757575;
    --grisClaro: #b6b6b6;
}
/*truco para uniformidad de texto*/
html{
    font-size: 62.5%;
}
body{
    font-size: 16px;
    font-family: 'krub', sans-serif;
    background: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%);
}
/* Lo de arriba es comoo la medida estandar para uniformidad de texto entre los navegadores*/

/*tipografia*/
h1{
    font-size: 3.8rem;
}
h2{
    font-size: 2.8rem;
}
h3{
    font-size: 1.8rem;
}

h1,h2,h3{
    text-align: center;
}
.titulo span{
    font-size: 2rem;
}
.navegacion-principal{
    /*pading es por dentro, margin es por fuera*/

    display: flex;/* Flex box esta disenado para alinear elementos en tus disenos.
    Existi una proviedad de este que se llama "justufy-content" para filas// alig-items es para columnas (flex-direction)*/
    justify-content: space-between;
    font-weight: bold;/*para poner en color negrita un estilo*/
    font-size: 2rem;
    flex-direction: column;
    align-items: center;
}
@media (min-width: 768px){
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between;
    }
 
}
.navegacion-principal a:hover{/*el hover es para poner el cursor en el hipervinculo reaccione o haga algo, en este caso que cambie de color*/
    background-color: var(--primario);
    color: var(--oscuro);

}
.navegacion-principal a{
    color: var(--blanco);
    text-decoration: none;/*remueve el estilo subrayado del texto que trae por defualt el nav */
    padding: 1rem;
}
/* si por ejemplo tendria otro .navegacion donde configure el color del backroud de nuevo, el navegador tomara por preferido el que este 
mas especifico o mas definido*/

/* rem es una unidad de medida en CSS 1 rem es = 10pix */
.contenedor{
    
    max-width: 120rem;
    margin: 0 auto;

    /*otra forma de hacer lo de arriba mas personalizada es:
    margin-top: 0;
    margin-bottom: 0;
    margin-right: auto;
    margin-left: auto; */
}
.nav-bg{
    background-color: var(--secundario);
}

.hero{
    background-image: url(../img/hero.jpg);/* ../ es para regresar un nivel de directorio
    ya que la carpeta img esta afuera de css*/

    background-repeat: no-repeat; //*sirve para evitar la repeticion de la imagen cuando es pequena */
    background-size: cover;/*sirve para cubrir la imagen con todo el tamano */
    height: 450px; /*alto del elemento hero*/
    position: relative;/* es para manipular la posicion de algo. el padre siempre debe ser relativo y el hijo debe ser absoluto*/
}
.contenido-hero{
    position: absolute;/* esta es la clase hija de hero, por esta razon es absoluta*/
    background-color: rgba(0,0,0,.7);
    width: 100%;
    height: 100%;
    /*alinear el texto de manera vertical y horizontalmente*/
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero p,
.contenido-hero h2{
    color: var(--blanco);
}
.Contenido-Hero-Ubicacion{
    display: flex;
    align-items: flex-end;
}


.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    text-decoration: none;/*para quitar el subrayado a el texto */
    padding: 10px 40px;
    border-radius: 5px;
    margin-top: 3rem;
   
    font-weight: bold;/*negritas*/
    text-transform: uppercase;/*convierte el texto a mayusculas*/
    width: auto;
    text-align: center;
    border: none;
}
.boton:hover{
    cursor: pointer;
}

@media (max-width: 480px){
    .boton{
        width: 70%;
    }
}

/*servicios*/

@media (min-width: 768px){
    .servicios{
        display: grid;
        /*esta propiedad define el area de las columnas y la funcion repeat() repite 3 veces*/

        grid-template-columns: repeat(3, 1fr);/*fr: es fraccion... tambien se puede 3fr,3fr.3fr*/
        column-gap: 1rem;//*1 rem; espacios entre columnas */
    }
}
.servicio{
    display:flex;
    flex-direction: column;
    align-items: center;
}
.servicio h3{
    color: var(--secundario);
    font-weight: normal;
}
p{
    text-align: center;
    line-height: 2; /*asi se pone el interliniado en CSS*/
}
.iconos{
    width: 15rem;
    height: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;/*espacio uniformemente para acomodar los iconos*/
    align-items: center;
}
/*seccion de contacto*/
.formulario{
    background-color: var(--gris);
    width: min(60rem, 100%); /*que es mas pequeyo, 60 rem o el 100% del tamayo de la pantalla? es una alternativa al media qeri*/
    margin: 0 auto;
    padding: 2rem;
    border-radius: 1rem;
}
.formulario fieldset{
    border: none; /*para quitar el border del formulario*/
}
.formulario legend{
    text-align: center;
    text-transform: uppercase;/*en mayusculas*/
    font-weight: bold;
    font-size: 1.8rem;
    margin-bottom: 2rem;
    color: var(--primario);
}
.campo{
    margin-bottom: 1rem;
}
.campo label{
    color: var(--blanco);
    font-weight: bold;/*negritas*/
    margin-bottom: .5rem;
    display: block;/*este es para acomodar de arriba para abajo el contenido del formulario (se puede poner tambien con flex pero no es lo msmo)*/
}
.input-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}
.campo textarea{
    height: 20rem;
}
/*boobstrap es un framework para poner estilos a tus componentes */

/*Utilidades*/
.w-sm-100{
    width: 100%;
}
@media (min-width: 768px){
    .w-sm-100{
        width: auto;
    }
}
/*las clases en el html se pueden dividr por dejar un espacio entre nombres*/
.flex{
    display: flex;
}

.alinear-derecha{
    justify-content: flex-end;
}
/*ajuste de columnas*/
@media (min-width: 768px){
    .contenedor-campos{
        display: grid;/*es el grid para poner 2 columnas*/
        grid-template-columns: repeat(2,1fr);
        column-gap: 1rem;
        grid-template-rows: auto auto 20rem;/*darle espacio a cada fila*/
    }
    /*el orden seria: nombre, telefono, correo, mensaje. modificar
    correo y mensaje, entonces uso nth para nth-child 3 y 4*/
    .campo:nth-child(3), /*el nth child. el n es de numero*/
    .campo:nth-child(4){
        grid-column: 1/3; /*posiciona el elemento para que vaya de la columna 1 a la 3*/

    }
.pie{
    text-align: center;
}

}